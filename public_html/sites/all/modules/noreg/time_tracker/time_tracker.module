<?php
/**
 * @file
 * Time tracker module
 */

/**
 * Implements hook_menu().
 */
function time_tracker_menu() {
    $items = array();

    // Start timetracker
    $items['time_tracker/start'] = array(
      'page callback' => 'time_tracker_start',
      'access callback' => TRUE,
      'delivery callback' => 'drupal_json_output',
    );

    // Stop timetracker

    return $items;
}


/**
 * Implements hook_form()
 * @return array
 */
function time_tracker_start_form() {
    $form = array();

    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => 'Start',
    );
    return $form;
}


/**
 * @param $id
 * @return array
 * @throws \Exception
 */
function time_tracker_start($id) {


    // Create new node (timestamp) create node programatically
    global $user;

    $node                           = new stdClass();
    $node->title                    = "Tidsstempel";
    $node->type                     = "timestamps";
    $node->language                 = LANGUAGE_NONE;
    $node->uid                      = $user->uid;
    $node->status                   = 1;

    node_object_prepare($node); // Sets some defaults. Invokes hook_prepare() and hook_node_prepare().

    // Set node values
    $node->field_timestamp_vehicle_task_id[$node->language][0]['target_id'] = (int) $id;
    $node->field_timestamp_stamps[$node->language][0]['value'] = REQUEST_TIME;
    $node->field_timestamp_stamps[$node->language][0]['value2'] = 0;

    // Save node
    $node                           = node_submit($node); // Prepare node for saving
    node_save($node);

    // Return array
    return ["error" => false];

}
